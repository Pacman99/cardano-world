diff --git a/flake.nix b/flake.nix
index 3bc11bff0f..e5dc150b68 100644
--- a/flake.nix
+++ b/flake.nix
@@ -35,7 +35,6 @@
         n2c.follows = "n2c";
         data-merge.follows = "data-merge";
         cardano-iohk-nix.follows = "iohkNix";
-        cardano-node.follows = "cardano-node";
         cardano-db-sync.follows = "cardano-db-sync";
         cardano-wallet.follows = "cardano-wallet";
       };
@@ -47,11 +46,6 @@
     capsules.url = "github:input-output-hk/devshell-capsules";
     # --------------------------------------------------------------
     # --- Bride Heads ----------------------------------------------
-    # TODO: remove cardano-node (and use self) when mono-repo branch is merged:
-    cardano-node = {
-      url = "github:input-output-hk/cardano-node";
-      flake = false;
-    };
     cardano-db-sync.url = "github:input-output-hk/cardano-db-sync/13.0.0-rc2";
     cardano-wallet.url = "github:input-output-hk/cardano-wallet";
     cardano-ogmios.url = "github:input-output-hk/cardano-ogmios/vasil";
diff --git a/nix/automation/devshells.nix b/nix/automation/devshells.nix
index 6eb1d8cd4d..0f9f3ea835 100644
--- a/nix/automation/devshells.nix
+++ b/nix/automation/devshells.nix
@@ -72,12 +72,6 @@ in {
       inputs.cells.cardano.devshellProfiles.world
     ];
   };
-  monorepo = std.lib.mkShell {
-    imports = [
-      cardanoWorld
-      inputs.cells.cardano.devshellProfiles.monorepo
-    ];
-  };
   minimal = std.lib.mkShell {
     imports = [
       cardanoWorld
diff --git a/nix/automation/jobs.nix b/nix/automation/jobs.nix
index b693de2a80..a6ed8d13d2 100644
--- a/nix/automation/jobs.nix
+++ b/nix/automation/jobs.nix
@@ -2,7 +2,7 @@
   inputs,
   cell,
 }: let
-  inherit (inputs) nixpkgs cells iohkNix cardano-node;
+  inherit (inputs) nixpkgs cells iohkNix;
   inherit (cells.cardano) packages oci-images;
   inherit (nixpkgs) lib;
   inherit (inputs.bitte-cells._writers.library) writeShellApplication;
@@ -67,46 +67,6 @@
       fi
   '';
 in {
-  update-mono-repo = writeShellApplication {
-    name = "update-mono-repo";
-    description = "Update the checksums neccesary to build the mono-repo";
-    text = let project = packages.project.appendModule { src = lib.mkForce cardano-node; }; in ''
-      # go to project root directory:
-      while [[ $PWD != / && ! -e "flake.nix" ]]; do
-        cd ..
-      done
-
-      nix-prefetch-git --deepClone --leave-dotGit --quiet https://github.com/input-output-hk/cardano-node ${cardano-node.rev} | jq -r .sha256 > nix/cardano/prepare-mono-repo/cardano-node.sha256
-      nix-prefetch-git --deepClone --leave-dotGit --quiet https://github.com/input-output-hk/ouroboros-network ${project.pkg-set.config.packages.ouroboros-network.src.rev} | jq -r .sha256 > nix/cardano/prepare-mono-repo/ouroboros-network.sha256
-      nix-prefetch-git --deepClone --leave-dotGit --quiet https://github.com/input-output-hk/cardano-ledger ${project.pkg-set.config.packages.cardano-ledger-core.src.rev} | jq -r .sha256 > nix/cardano/prepare-mono-repo/cardano-ledger.sha256
-      nix-prefetch-git --deepClone --leave-dotGit --quiet https://github.com/input-output-hk/ekg-forward ${project.pkg-set.config.packages.ekg-forward.src.rev} | jq -r .sha256 > nix/cardano/prepare-mono-repo/ekg-forward.sha256
-      nix build .#${nixpkgs.system}.cardano.prepare-mono-repo.mono-repo
-    '';
-    runtimeInputs = with nixpkgs; [ nix-prefetch-git git jq];
-  };
-  merge-mono-repo = writeShellApplication {
-    description = "Create/Replace the mono-repo branch of current git repo";
-    name = "merge-mono-repo";
-    text = ''
-      # go to project root directory:
-      while [[ $PWD != / && ! -e ".git" ]]; do
-        cd ..
-      done
-      nix build .#${nixpkgs.system}.cardano.prepare-mono-repo.mono-repo
-      git branch -D mono-repo || true
-      git checkout -b mono-repo
-      git remote add nix-mono-repo ./result || true
-      git fetch nix-mono-repo
-      git merge nix-mono-repo/fetchgit --allow-unrelated-histories --no-ff \
-        -m "Merge cardano-node, ouroborous, ledger and ekg-forward into mono-repo"
-      git apply -3 nix/cardano/prepare-mono-repo/remove-prepare-mono-repo.diff
-      rm -r nix/cardano/prepare-mono-repo
-      nix flake lock --update-input mono-repo
-      nix flake lock --update-input cardano-node
-      git commit -a -m "Adapt nix build after merge into mono repo"
-    '';
-    runtimeInputs = with nixpkgs; [ nix git ];
-  };
   update-cabal-source-repo-checksums = writeShellApplication {
     name = "update-cabal-source-repo-checksums";
     text = ''
diff --git a/nix/cardano/packages/default.nix b/nix/cardano/packages/default.nix
index 293acf86a1..98e1e38935 100644
--- a/nix/cardano/packages/default.nix
+++ b/nix/cardano/packages/default.nix
@@ -3,7 +3,7 @@
 ,
 }:
 let
-  inherit (inputs) self std nixpkgs iohkNix cardano-node
+  inherit (inputs) self std nixpkgs iohkNix
     cardano-wallet cardano-db-sync cardano-ogmios;
   inherit (inputs.cells) cardano;
   inherit (nixpkgs) lib;
@@ -29,8 +29,7 @@ let
     (import ./haskell.nix {
       inherit haskell-nix;
       inherit (inputs) byron-chain;
-      # TODO: switch to self after mono-repo branch is merged:
-      src = cardano-node;
+      src = self;
     }).appendOverlays [
       devshell
       projectComponents
@@ -83,7 +82,7 @@ let
                   let
                     # setGitRev is a script to stamp executables with version info.
                     # Done here to avoid tests depending on rev.
-                    setGitRev = ''${final.pkgs.buildPackages.haskellBuildUtils}/bin/set-git-rev "${cardano-node.rev}" $out/bin/*'';
+                    setGitRev = ''${final.pkgs.buildPackages.haskellBuildUtils}/bin/set-git-rev "${self.rev}" $out/bin/*'';
                   in
                   nixpkgs.runCommand value.name
                     {
diff --git a/nix/cardano/packages/haskell.nix b/nix/cardano/packages/haskell.nix
index dd04545f6c..b79584ace2 100644
--- a/nix/cardano/packages/haskell.nix
+++ b/nix/cardano/packages/haskell.nix
@@ -39,14 +39,9 @@ haskell-nix.cabalProject' ({ pkgs
         name = "cardano-node-src";
         filter = path: type:
           let relPath = lib.removePrefix "${src.outPath}/" path; in
-          # excludes directories not part of cabal project:
-          (type != "directory" || (builtins.match ".*/.*" relPath != null) || (!(lib.elem relPath [
-            "nix"
-            "doc"
-            "docs"
-          ]) && !(lib.hasPrefix "." relPath)))
-          # only keep cabal.project from files at root:
-          && (type == "directory" || builtins.match ".*/.*" relPath != null || (relPath == "cabal.project"))
+          # only keep cabal.project and directories under src:
+          (relPath == "cabal.project" || relPath == "src" || (type == "directory" && (builtins.match "src/.*" relPath != null))
+            || (builtins.match "src/.*/.*" relPath != null))
           && (lib.cleanSourceFilter path type)
           && (haskell-nix.haskellSourceFilter path type)
           && !(lib.hasSuffix ".gitignore" relPath)
diff --git a/nix/cardano/packages/packages-exes.nix b/nix/cardano/packages/packages-exes.nix
index 4d4fd327d2..78bd068b9d 100644
--- a/nix/cardano/packages/packages-exes.nix
+++ b/nix/cardano/packages/packages-exes.nix
@@ -49,12 +49,12 @@
   ];
   cardano-tracer = [
     "cardano-tracer"
-    "demo-acceptor"
-    "demo-forwarder"
+    "cardano-tracer-demo-acceptor"
+    "cardano-tracer-demo-forwarder"
   ];
   ekg-forward = [
-    #"demo-acceptor"
-    #"demo-forwarder"
+    "ekg-forward-demo-acceptor"
+    "ekg-forward-demo-forwarder"
   ];
   ledger-state = [
     "ledger-state"
